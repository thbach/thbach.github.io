{"version":3,"sources":["components/Box.js","components/Floor.js","components/Character.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","mesh","useRef","useState","hovered","setHover","active","setActive","useSpring","scale","color","ref","onClick","event","onPointerOver","onPointerOut","args","meshStandardMaterial","Floor","useLoader","TextureLoader","colorMap","position","rotation","Math","PI","attach","map","Character","THREE","transparent","CustomLoader","progress","useProgress","Html","center","style","App","myCamera","useEffect","className","Suspense","fallback","PerspectiveCamera","fov","aspect","near","far","makeDefault","OrbitControls","maxPolarAngle","minPolarAngle","camera","current","enablePan","enableZoom","enableRotate","target","Stats","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAIe,SAASA,EAAIC,GAE3B,IAAMC,EAAOC,mBAGb,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAAyBC,oBAAU,CAClCC,MAAOH,EAAS,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,GACzCI,MAAON,EAAU,UAAY,WAFtBK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAWf,OACC,eAAC,WAAST,KAAV,2BAAmBD,GAAnB,IAA0BW,IAAKV,EAAMQ,MAAOA,EAAOG,QAAS,SAACC,GAAD,OAAWN,GAAWD,IAASQ,cAAe,SAACD,GAAD,OAAWR,GAAS,IAAOU,aAAc,SAACF,GAAD,OAAWR,GAAS,IAAvK,UACC,mCAAmBW,KAAM,CAAC,EAAG,EAAG,KAChC,cAAC,WAASC,qBAAV,CAA+BP,MAAOA,Q,YCN1BQ,EAdD,SAAClB,GACd,MAAmBmB,YAAUC,IAAe,CAAC,uGAAtCC,EAAP,oBACMpB,EAAOC,mBAEb,OACC,mCACC,uBAAMoB,SAAU,CAAC,GAAI,EAAG,GAAIC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAAxD,UACC,qCAAqBC,OAAO,WAAWf,IAAKV,EAAMe,KAAM,CAAC,GAAI,MAC7D,sCAAsBW,IAAKN,U,OCOhBO,EAdG,SAAC5B,GAClB,MAAmBmB,YAAUU,gBAAqB,CAAC,qBAA5CR,EAAP,oBACMpB,EAAOC,mBAEb,OACC,mCACC,uBAAMoB,SAAU,CAAC,EAAG,IAAK,GAAIC,SAAU,CAAC,EAAG,EAAG,GAA9C,UACC,qCAAqBG,OAAO,WAAWf,IAAKV,EAAMe,KAAM,CAAC,EAAG,KAC3DK,GAAY,mCAAmBK,OAAO,WAAWC,IAAKN,EAAUS,aAAW,UCLhF,SAASC,IACR,IAAQC,EAAaC,cAAbD,SACR,OACC,cAACE,EAAA,EAAD,CAAMC,QAAM,EAAZ,SACC,uBAAMC,MAAO,CAAE1B,MAAO,SAAtB,UAAkCsB,EAAlC,iBA2CYK,MAtCf,WACC,IAAMC,EAAWpC,mBAIjB,OAFAqC,qBAAU,cAAU,CAACD,IAGpB,mCACC,qBAAKE,UAAU,YAAf,SACC,cAAC,IAAD,UACC,eAAC,IAAMC,SAAP,CAAgBC,SAAU,cAACX,EAAD,IAA1B,UACC,cAACY,EAAA,EAAD,CAAmBC,IAAK,GAAIC,OAAQ,EAAGC,KAAM,GAAKC,IAAK,IAAKpC,IAAK2B,EAAUU,aAAW,EAAC1B,SAAU,CAAC,EAAG,EAAG,MACxG,cAAC2B,EAAA,EAAD,CAGCC,cAAe1B,KAAKC,GAAK,IACzB0B,cAAe3B,KAAKC,GAAK,EACzB2B,OAAQd,EAASe,QACjBC,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,OAAQ,CAAC,EAAG,EAAG,KAGhB,iCAGA,cAAC1D,EAAD,CAAKuB,SAAU,EAAE,IAAK,EAAG,KACzB,cAACvB,EAAD,CAAKuB,SAAU,CAAC,IAAK,EAAG,KACxB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACoC,EAAA,EAAD,cCrCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4d70d806.chunk.js","sourcesContent":["import { useSpring, animated } from '@react-spring/three';\nimport { useFrame } from '@react-three/fiber';\nimport { useRef, useState } from 'react';\n\nexport default function Box(props) {\n\t// This reference will give us direct access to the mesh\n\tconst mesh = useRef();\n\n\t// Set up state for the hovered and active state\n\tconst [hovered, setHover] = useState(false);\n\tconst [active, setActive] = useState(false);\n\n\tconst { scale, color } = useSpring({\n\t\tscale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n\t\tcolor: hovered ? 'hotpink' : 'orange',\n\t});\n\t// Rotate mesh every frame, this is outside of React without overhead\n\t// useFrame(() => {\n\t//   if(mesh.current != null){\n\t//     mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n\t//   }\n\t// })\n\n\treturn (\n\t\t<animated.mesh {...props} ref={mesh} scale={scale} onClick={(event) => setActive(!active)} onPointerOver={(event) => setHover(true)} onPointerOut={(event) => setHover(false)}>\n\t\t\t<boxBufferGeometry args={[1, 1, 1]} />\n\t\t\t<animated.meshStandardMaterial color={color} />\n\t\t</animated.mesh>\n\t);\n}\n","import { useSpring, animated } from '@react-spring/three';\n// import { Plane } from '@react-three/drei';\nimport { useFrame, useLoader } from '@react-three/fiber';\nimport { useRef, useState } from 'react';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\n\nconst Floor = (props) => {\n\tconst [colorMap] = useLoader(TextureLoader, ['https://aws1.discourse-cdn.com/mcneel/original/3X/1/2/1246b4b2ae43a559be6a56557770efe1627fcd5b.jpg']);\n\tconst mesh = useRef();\n\n\treturn (\n\t\t<>\n\t\t\t<mesh position={[0, -2, 0]} rotation={[-Math.PI / 2, 0, 0]}>\n\t\t\t\t<planeBufferGeometry attach=\"geometry\" ref={mesh} args={[20, 20]} />\n\t\t\t\t<meshStandardMaterial map={colorMap} />\n\t\t\t</mesh>\n\t\t</>\n\t);\n};\n\nexport default Floor;\n","import { useSpring, animated } from '@react-spring/three';\n// import { Plane } from '@react-three/drei';\nimport { useFrame, useLoader, textu } from '@react-three/fiber';\nimport { useRef, useState } from 'react';\n// import { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport * as THREE from 'three';\n\nconst Character = (props) => {\n\tconst [colorMap] = useLoader(THREE.TextureLoader, ['assets/char1.png']);\n\tconst mesh = useRef();\n\n\treturn (\n\t\t<>\n\t\t\t<mesh position={[0, 2.5, 0]} rotation={[0, 0, 0]}>\n\t\t\t\t<planeBufferGeometry attach=\"geometry\" ref={mesh} args={[9, 9]} />\n\t\t\t\t{colorMap && <meshBasicMaterial attach=\"material\" map={colorMap} transparent />}\n\t\t\t</mesh>\n\t\t</>\n\t);\n};\n\nexport default Character;\n","import React, { useRef, useEffect } from 'react';\n\nimport { Html, Stats, useProgress, OrbitControls, PerspectiveCamera, OrthographicCamera } from '@react-three/drei';\nimport { Canvas } from '@react-three/fiber';\n// import {} from 'three/examples/jsm/cameras/';\n\nimport Box from './components/Box';\nimport Floor from './components/Floor';\nimport Character from './components/Character';\n\nfunction CustomLoader() {\n\tconst { progress } = useProgress();\n\treturn (\n\t\t<Html center>\n\t\t\t<span style={{ color: 'white' }}>{progress} % loaded</span>\n\t\t</Html>\n\t);\n}\n\nfunction App() {\n\tconst myCamera = useRef();\n\n\tuseEffect(() => {}, [myCamera]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Canvas>\n\t\t\t\t\t<React.Suspense fallback={<CustomLoader />}>\n\t\t\t\t\t\t<PerspectiveCamera fov={20} aspect={1} near={0.1} far={100} ref={myCamera} makeDefault position={[0, 0, 30]} />\n\t\t\t\t\t\t<OrbitControls\n\t\t\t\t\t\t\t// maxAzimuthAngle={0.15}\n\t\t\t\t\t\t\t// minAzimuthAngle={-0.15}\n\t\t\t\t\t\t\tmaxPolarAngle={Math.PI / 1.8}\n\t\t\t\t\t\t\tminPolarAngle={Math.PI / 2}\n\t\t\t\t\t\t\tcamera={myCamera.current}\n\t\t\t\t\t\t\tenablePan={false}\n\t\t\t\t\t\t\tenableZoom={false}\n\t\t\t\t\t\t\tenableRotate={true}\n\t\t\t\t\t\t\ttarget={[0, 2, 0]}\n\t\t\t\t\t\t\t// rotateSpeed={0.1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ambientLight />\n\t\t\t\t\t\t{/* <pointLight position={[10, 10, 10]} /> */}\n\n\t\t\t\t\t\t<Box position={[-1.2, 0, 0]} />\n\t\t\t\t\t\t<Box position={[1.2, 0, 0]} />\n\t\t\t\t\t\t<Character />\n\t\t\t\t\t\t<Floor />\n\t\t\t\t\t\t<Stats />\n\t\t\t\t\t</React.Suspense>\n\t\t\t\t</Canvas>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}